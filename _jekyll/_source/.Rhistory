devtools::source_url("https://raw.githubusercontent.com/KeachMurakami/Sources/master/Startup_silent.R")
ggplot(data = iris, aes(x = Sepal.Length)) + geom_histogram()
plotflow::ggalign(fig1, fig2)
fig1 <- ggplot(data = iris, aes(x = Sepal.Length, y = Petal.Length)) + geom_point()
fig2 <- ggplot(data = iris, aes(x = Sepal.Length)) + geom_histogram()
plotflow::ggalign(fig1, fig2)
plotflow::ggalign(plotflow::ggalign(fig1, fig2), fig2)
plotflow::ggalign(fig1, fig2) %>% str
fig2 %>% str
plotflow::ggalign
fig1 + facet_grid(~species)
fig1 + facet_grid( ~ Species)
plotflow::ggalign(plot1 = fig1 + facet_grid( ~ Species),
plot2 = fig2 + facet_grid( ~ Species))
plotflow::ggalign(plot1 = fig1 + facet_grid( ~ Species),
plot2 = fig2 + facet_grid(Species ~ .))
airquality
airquality %>% head
fig2 <- ggplot(data = airquality, aes(x = Temp, y = Ozone)) + geom_point()
plotflow::ggalign(plot1 = fig1, plot2 = fig2)
fig2_facet <-
fig2 + facet_table( ~ Moth)
fig1_facet <-
fig1 + facet_grid( ~ Species)
fig2_facet <-
fig2 + facet_wrap( ~ Moth)
plotflow::ggalign(plot1 = fig1 + facet_grid( ~ Species),
plot2 = fig2 + facet_grid(Species ~ .))
plotflow::ggalign(plot1 = fig1_facet,
plot2 = fig2_facet)
fig2 + facet_wrap( ~ Moth)
fig2 + facet_wrap( ~ Month)
fig2_facet <-
fig2 + facet_wrap( ~ Month)
plotflow::ggalign(plot1 = fig1_facet,
plot2 = fig2_facet)
plotflow::ggalign
plot1 = fig1
plot2 = fig2
ggplot2::ggplotGrob(plot1)
gA <- ggplot2::ggplotGrob(plot1)
gB <- ggplot2::ggplotGrob(plot2)
gB
plot2
gA
gA$heights
gA$widths
maxHeight <- grid::unit.pmax(gA$heights[2:5], gB$heights[2:5])
gA$heights[2:5] <- as.list(maxHeight)
gB$heights[2:5] <- as.list(maxHeight)
gridExtra::arrangeGrob(gA, gB, nrow = 1)
out <- gridExtra::arrangeGrob(gA, gB, nrow = 1)
class(out) <- c("ggalign", class(out))
out
fig2 + facet_wrap( ~ Month)
fig2 + facet_grid( ~ Month)
fig2_facet <-
fig2 + facet_grid( ~ Month)
plotflow::ggalign(plot1 = fig1_facet,
plot2 = fig2_facet)
plotflow::ggalign(plot1 = fig1, plot2 = fig2)
jekyll_ <- function() servr::jekyll(dir = "~/Dropbox/KeachMurakami.github.io/", input = c("_base", "_source", "_posts"))
jekyll_()
jekyll_()
col_index <- matrix(301:1100, ncol = 40)
row_index <- matrix(501:1200, ncol = 35)
library(pri)
library(animation)
library(imager)
pri::set_read_img("png")
col_on_greyboard <- "red"
col_on_leaf <- "red"
col_patch <- c(rgb(0, 0, 1, alpha=0.5),  rgb(1, 0, 0, alpha=0.5))
i530 <- read_img("gifs/pic1.png")
i570 <- read_img("gifs/pic2.png")
fudukue::suzuri()
library(pri)
library(animation)
library(imager)
pri::set_read_img("png")
col_on_greyboard <- "red"
col_on_leaf <- "red"
col_patch <- c(rgb(0, 0, 1, alpha=0.5),  rgb(1, 0, 0, alpha=0.5))
i530 <- read_img("gifs/pic1.png")
i570 <- read_img("gifs/pic2.png")
jekyll_ <- function() servr::jekyll(dir = "~/Dropbox/KeachMurakami.github.io/", input = c("_base", "_source", "_posts"))
jekyll_()
color_scale_bar <-
lapply(i = 300:750, function(i){
annotate(geom = "point", x = i, y = 0, fill = lambda2color(i), col = NA)
})
color_scale_bar <-
lapply(300:750, function(i){
annotate(geom = "point", x = i, y = 0, fill = lambda2color(i), col = NA)
})
library(tidyverse)
library(stringr)
color_scale_bar <-
lapply(300:750, function(i){
annotate(geom = "point", x = i, y = 0, fill = lambda2color(i), col = NA)
})
library(tidyverse)
library(stringr)
lambda2color <-
Vectorize(
function(lambda){
# central wavelength [nm]
central <-
c(red = 700.0,
green = 546.1,
blue = 435.8,
orange = 605.0,
yellow = 580.0,
cyan = 490.0,
purple = 400.0)
# half width [nm]
half_width <-
c(red = 90,
green = 80,
blue = 80,
orange = 60,
yellow = 50,
cyan = 50,
purple = 40)
# intensity of seven colors
intensity <-
c(red = .95,
green = .74,
blue = .75,
orange = .40,
yellow = .10,
cyan = .30,
purple = .30)
norms <-
intensity * exp( - (lambda - central)^2 / half_width^2)
r <- sum(norms[c("red", "orange", "purple")])
g <- sum(norms[c("green", "orange", "yellow", "cyan", "purple")] * c(1, .715, .83, 1, .5))
b <- sum(norms[c("blue", "orange", "cyan", "purple")] * c(1, .23, 1, 1))
r_8bit <- min(255, round(r*255, 0))
g_8bit <- min(255, round(g*255, 0))
b_8bit <- min(255, round(b*255, 0))
# to hexadecimal
to_hex <-
function(x){
hexed <-
as.hexmode(x) %>%
as.character
if(str_count(hexed) == 1){
paste0("0", hexed) %>% return
} else {
hexed
}
}
# #rrggbb
paste0("#", to_hex(r_8bit), to_hex(g_8bit), to_hex(b_8bit)) %>%
return
}
)
color_scale_bar <-
lapply(300:750, function(i){
annotate(geom = "point", x = i, y = 0, fill = lambda2color(i), col = NA)
})
test_df %>%
ggplot(aes(x = wavelength, y = value, col = factor(wavelength))) +
guides(col = F) +
geom_point() +
geom_line(aes(group = NA)) +
color_scale_bar
test_df <-
data_frame(wavelength = 400:800, value = sin(wavelength/2 / pi))
test_df %>%
ggplot(aes(x = wavelength, y = value, col = factor(wavelength))) +
guides(col = F) +
geom_point() +
geom_line(aes(group = NA)) +
scale_color_manual(values = lambda2color(test_df$wavelength))
test_df %>%
ggplot(aes(x = wavelength, y = value, col = factor(wavelength))) +
guides(col = F) +
geom_point() +
geom_line(aes(group = NA)) +
color_scale_bar
color_scale_bar <-
lapply(300:750, function(i){
annotate(geom = "point", x = i, y = 0, fill = lambda2color(i), col = NA, shape = 21)
})
test_df %>%
ggplot(aes(x = wavelength, y = value, col = factor(wavelength))) +
guides(col = F, fill = F) +
geom_point() +
geom_line(aes(group = NA)) +
color_scale_bar
warnings()
test_df %>%
ggplot(aes(x = wavelength, y = value, col = factor(wavelength))) +
guides(col = F, fill = F) +
geom_point() +
geom_line(aes(group = NA)) +
annotate(geom = "point", x = 400, y = 0, fill = lambda2color(400), col = NA, shape = 21)
test_df %>%
ggplot(aes(x = wavelength, y = value, col = factor(wavelength))) +
guides(col = F, fill = F) +
geom_point() +
geom_line(aes(group = NA)) +
annotate(geom = "point", x = 400, y = 0, fill = lambda2color(400), col = "black", shape = 21)
test_df %>%
ggplot(aes(x = wavelength, y = value, col = factor(wavelength))) +
guides(col = F, fill = F) +
geom_point() +
geom_line(aes(group = NA)) +
annotate(geom = "point", x = 400, y = 0, fill = lambda2color(400), col = "black", shape = 22)
test_df %>%
ggplot(aes(x = wavelength, y = value, col = factor(wavelength))) +
guides(col = F) +
geom_point() +
geom_line(aes(group = NA)) +
scale_color_manual(values = lambda2color(test_df$wavelength))
test_df %>%
ggplot(aes(x = wavelength, y = value)) +
guides(col = F) +
geom_point() +
geom_line(aes(group = NA)) +
annotate(geom = "point", x = 400, y = 0, col = lambda2color(400))
test_df %>%
ggplot(aes(x = wavelength, y = value)) +
guides(col = F) +
geom_point() +
geom_line(aes(group = NA)) +
color_scale_bar
color_scale_bar <-
lapply(300:750, function(i){
annotate(geom = "point", x = 400, y = 0, col = lambda2color(400))
})
color_scale_bar <-
lapply(300:750, function(i){
annotate(geom = "point", x = i, y = 0, col = lambda2color(i))
})
test_df %>%
ggplot(aes(x = wavelength, y = value)) +
guides(col = F) +
geom_point() +
geom_line(aes(group = NA)) +
color_scale_bar
jekyll_()
jekyll_()
jekyll
