githubinstall::githubinstall("ggridges")
ifFalse
isFALSE
isTRUE
factor(x = 1:3, labels = c("シバ", "アメショ", "ハスキー"), levels = c(1, 2, 1))
factor(x = c("シバ", "アメショ", "ハスキー"), labels = c("イヌ", "ネコ", "イヌ"), levels = c(1, 2, 3))
factor(x = 1:3, labels = c("イヌ", "ネコ", "イヌ"), levels = c(1, 2, 3))
category
category <- factor(x = 1:3, labels = c("イヌ", "ネコ", "イヌ"), levels = c(1, 2, 3))
tibble(name = c("シバ", "ミケ", "コリー"), size = c(10, 3, 12), category)
tibble(name = c("シバ", "ミケ", "コリー"), size = c(10, 3, 12), category) %>%
ggplot(aes(x = name, y = size, col = category)) +
geom_bar()
tibble(name = c("シバ", "ミケ", "コリー"), size = c(10, 3, 12), category) %>%
ggplot(aes(x = name, y = size, col = category)) +
geom_bar(stat = "identity")
tibble(name = c("シバ", "ミケ", "コリー"), size = c(10, 3, 12), category) %>%
ggplot(aes(x = name, y = size, filll = category)) +
geom_bar(stat = "identity")
tibble(name = c("シバ", "ミケ", "コリー"), size = c(10, 3, 12), category) %>%
ggplot(aes(x = name, y = size, fill = category)) +
geom_bar(stat = "identity")
tibble(name = c("シバ", "ミケ", "コリー"), size = c(10, 3, 12), category)
category <- factor(x = 1:3, labels = c("dog", "cat", "dog"), levels = c(1, 2, 3))
tibble(name = c("シバ", "ミケ", "コリー"), size = c(10, 3, 12), category) %>%
ggplot(aes(x = name, y = size, fill = category)) +
geom_bar(stat = "identity")
tibble(name = c("シバ", "ミケ", "コリー"), size = c(10, 3, 12), category) %>%
ggplot(aes(x = name, y = size, fill = category)) +
geom_bar(stat = "identity")
install.packages("blogdown")
plot(1:10)
category <- factor(x = 1:3, labels = c("dog", "cat", "dog"), levels = c(1, 2, 3))
tibble(name = c("シバ", "ミケ", "コリー"), size = c(10, 3, 12), category) %>%
ggplot(aes(x = name, y = size, fill = category)) +
geom_bar(stat = "identity")
library(fudukue)
tibble(name = c("シバ", "ミケ", "コリー"), size = c(10, 3, 12), category) %>%
ggplot(aes(x = name, y = size, fill = category)) +
geom_bar(stat = "identity")
system.time()
Sys.time()
Sys.time() %>% class
Sys.time() %>% round(2)
Sys.time() %>% round("month")
Sys.time() %>% round("year")
Sys.time()
?truncate
Sys.time() %>% round(year)
Sys.time() %>% round("y")
lubridate
now
now()
now() %>% round("year")
Sys.time() %>% round("year")
Sys.time() %>% round("day")
lubridate::now()
lubridate::now() %>% class
now
current_time
current_time %>% class
current_time <- lubridate::now()
current_time %>% class
current_time %>% round("year")
Sys.time()
current_time <- Sys.time()
current_time %>% class
current_time %>% round("year")
current_time %>% round("month")
current_time %>% round("day")
current_time %>% round("year")
current_time %>% round("year") %>% as.numeric
isTRUE
isTRUE(1:5)
is.logical(5)
is.logical(1)
is.logical(T)
if(5){ print(5)}
if(isTRUE(5)){ print(5)}
body(isTRUE)
body(isFALSE)
isFALSE(5)
if(isFALSE(c(F, F))){print("TRUE")}
cat("1")
if(isTRUE(5)){print("TRUE")}
cat("1\n")
cat("1\n")
if(isTRUE(5)){print("TRUE")}
if(isTRUE(1)){print("TRUE")}
cat("3\n")
if(isTRUE(TRUE){print("TRUE")}
if(isTRUE(TRUE)){print("TRUE")}
if(1:5){print("TRUE")}
if(5){print("TRUE")}
if(isTRUE(5)) print("TRUE") else print("FALSE")
if(isTRUE(1:5)) print("TRUE") else print("FALSE")
tibble(x = 1:5, y = 5:1)
tibble(x = 1:5, y = 5:1) %>%
mutate(x_is_y = isTRUE(x == y))
tibble(x = 1:5, y = 5:1) %>%
mutate(x_is_y = isTRUE(x == y),
x_is_not_y = isFALSE(x == y))
tibble(x = 1:5, y = 5:1) %>%
mutate(x_is_y = Vectorize(isTRUE)(x == y),
x_is_not_y = isFALSE(x == y))
category <- factor(x = 1:3, labels = c("dog", "cat", "dog"), levels = c(1, 2, 1))
category
category <- factor(x = 1:3, labels = c("dog", "cat", "dog"), levels = c(1, 2, 3))
category
category %>% hist
category %>% table
category %>% as.nunmeric
category %>% as.numeric
isTRUE() is more tolerant and now true in
x <- rlnorm(99)
isTRUE(median(x) == quantile(x)["50%"])
data.frame(x = 1:5, y = 5:1) %>%
mutate(x_is_y = isTRUE(x == y),
x_is_not_y = isFALSE(x == y))
category <- factor(x = 1:3, labels = c("dog", "cat", "dog"), levels = c(1, 2, 3))
tibble(name = c("シバ", "ミケ", "コリー"), size = c(10, 3, 12), category) %>%
ggplot(aes(x = category, y = size, fill = category)) +
geom_bar(stat = "identity")
category
category %>% levels
category %>% class
category <- factor(x = 1:3, labels = c("dog", "cat", "dog2"), levels = c(3, 2, 1))
tibble(name = c("シバ", "ミケ", "コリー"), size = c(10, 3, 12), category) %>%
ggplot(aes(x = category, y = size, fill = category)) +
geom_bar(stat = "identity")
tibble(name = c("シバ", "ミケ", "コリー"), size = c(10, 3, 12), category) %>%
ggplot(aes(x = name, y = size, fill = category)) +
geom_bar(stat = "identity")
plot(category)
category <- factor(x = 1:3, labels = c("dog", "cat", "dog"), levels = c(3, 2, 1))
plot(category)
tibble(name = c("シバ", "ミケ", "コリー"), size = c(10, 3, 12), category) %>%
ggplot(aes(x = category, y = size, fill = category)) +
geom_bar(stat = "identity")
tibble(name = c("シバ", "ミケ", "コリー"), size = c(10, 3, 12), category) %>%
ggplot(aes(x = name, y = size, fill = category)) +
geom_bar(stat = "identity")
if(isTRUE(c(T, T))) print("TRUE") else print("FALSE")
current_time <- Sys.time()
current_time
round_date(current_time, "2 hours")
round_date(current_time, "5 mins")
round_date
parse_period_unit
lubridate:::parse_period_unit
body(lubridate:::parse_period_unit)
lubridate:::parse_period_unit("mins")
lubridate:::parse_period_unit("min")
lubridate:::parse_period_unit("mi")
lubridate:::parse_period_unit("miu")
round_date(current_time, "5 mi")
lubridate:::parse_period_unit("10 mi")
lubridate:::parse_period_unit("10mi")
body(lubridate:::parse_period_unit)
lubridate:::parse_period_unit("10mi")
newly_installed <- dir(.libPaths())
newly_installed[!(newly_installed %in% installed)]
load("~/Dropbox/working.dir/2018-04-24-installed.Rdata")
newly_installed[!(newly_installed %in% installed)]
library(blogdown)
library(bookdown)
library(ggridges)
library(yose)
serve_site()
library(plotly)
blogdown:::insert_image_addin()
blogdown:::serve_site()
category <- factor(x = 1:3, labels = c("dog", "cat", "dog"), levels = c(3, 2, 1))
category
category <- factor(x = 1:3, labels = c("dog", "cat", "dog"))
category
tibble(name = c("シバ", "ミケ", "コリー"), size = c(10, 3, 12), category) %>%
ggplot(aes(x = name, y = size, fill = category)) +
geom_bar(stat = "identity")
data.frame(name = c("シバ", "ミケ", "コリー"), size = c(10, 3, 12), category) %>%
ggplot(aes(x = name, y = size, fill = category)) +
geom_bar(stat = "identity")
devtools::session_info()
lubridate::ceiling_date(current_time, unit = "5 mins")
current_time <- Sys.time()
lubridate::ceiling_date(current_time, unit = "5 mins")
time_now <- Sys.time()
time_now %>% class
time_now %>% round("year")
time_now %>% round("month")
time_now %>% round("day")
lubridate::round_date(current_time, unit = "2 hours")
lubridate::ceiling_date(time_now, unit = "5 mins")
library(fudukue)
jekyll()
tiime_now <- as.POSIXlt("2018-04-25 12:34:56")
tiime_now
iime_now <- as.POSIXlt("2018-04-25 12:34:56")
iime_now
(iime_now <- as.POSIXlt("2018-04-25 12:34:56"))
time_now %>% class
time_now %>% round("year")
time_now %>% round("month")
time_now %>% round("day")
(time_now <- as.POSIXlt("2018-04-25 12:34:56"))
time_now %>% class
time_now %>% round("year")
time_now %>% round("month")
time_now %>% round("day")
lubridate::round_date(time_now, unit = "2 hours")
lubridate::ceiling_date(time_now, unit = "5 mins")
(time_now <- as.POSIXlt("2018-04-25 12:34:56", tz = "UTC"))
time_now %>% class
time_now %>% round("year")
time_now %>% round("month")
time_now %>% round("day")
lubridate::round_date(time_now, unit = "2 hours")
lubridate::ceiling_date(time_now, unit = "5 mins")
jekyll()
jekyll()
jekyll()
blogdown:::serve_site()
lubridate::today()
library(fudukue)
jekyll()
x<-c(1:10)
y<-c(2:11)
x+y
x:y
Vectorize(`:`)
Vectorize(`:`)(x,y)
Vectorize(`:`)
map2(x, y, .f = `:`)
x<-c(1:10)
y<-c(2:11)
map2(x, y, .f = `:`)
x<-c(1:3)
y<-c(2:4)
map2(x, y, .f = `:`)
map2(.x = x, .y = y, .f = `:`)
devtools::install_github("benmarwick/wordcountaddin", type = "source", dependencies = TRUE)
wordcountaddin:::text_stats()
wordcountaddin:::text_stats()
shiny::runApp('tes')
runApp('tes')
path = "R -e \"shiny::runApp('./tes/app.R', launch.browser = TRUE)\""
system(path, wait = FALSE)
test
runApp('tes')
blogdown:::serve_site()
library(reticulate)
x <- r_to_py(1:10)
x
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
class(x)
[1] "python.builtin.list" "python.builtin.object"
iterate(x)
r_to_py
x <- r_to_py(1:10)
x
class(x)
iterate
?iterate
inherits(x, "python.builtin.iterator")
x
library(tidyverse)
read_csv("~/Dropbox/applications/2016_PD/交付申請/2018/使用計画書（村上貴一）.xls")
x <- data.frame(
key=rep(c("A1", "A2"), each=4),
time=rep(Sys.time() + lubridate::hours(1:4), 2),
value=1:8
)
x
x %>%
mutate(cumsum(value))
x %>%
group_by(key) %>%
mutate(cumsum(value))
x %>%
group_by(key) %>%
mutate(cumsum = cumsum(value))
library(reticulate)
x <- r_to_py(1:10)
r_to_py
x
class(x)
iterate(x)
iterate
"python.builtin.iterator"
class(x) <- "python.builtin.iterator"
iterate(x)
x
x <- r_to_py(1:10)
x
class(x)
library(reticulate)
py <- import_builtins()
i <- py$iter(1:100)
reticulate::iterate(i)
i
i
path.expand()
path.expand
path.expand("~/Dropbox/applications/2016_PD/jsps_letter_murakami.PDF")
path.expand("~/Dropbox/applications/2016_PD/予算申請/ID_PASS.xlsx")
read_csv("~/Dropbox/applications/2016_PD/jsps_letter_murakami.PDF")
read_csv("~/Dropbox/applications/2016_PD/予算申請/ID_PASS.xlsx")
read_csv
read_delim
readr:::read_delimited()
readr:::read_delimited
readr:::standardise_path
readr:::standardise_path("~/Dropbox/テスト.csv")
readr:::read_delimited(readr:::standardise_path("~/Dropbox/テスト.csv"))
readr:::standardise_path("~/Dropbox/テスト.csv")
readr:::read_delimited(readr:::standardise_path("~/Dropbox/テスト.csv"), readr:::tokenizer_csv())
readr:::read_delimited(readr:::standardise_path("~/Dropbox/テスト.csv"), readr:::tokenizer_csv())
readr:::read_delimited(readr:::standardise_path("~/Dropbox/テスト.csv"), readr:::tokenizer_csv())
read_csv("~/Dropbox/テスト.csv")
read_csv("~/Dropbox/テスト/テスト.csv")
read_csv("~/Dropbox/テスト/感し.csv")
read_csv("~/Dropbox/テスト/感じ.csv")
wordcountaddin:::text_stats()
wordcountaddin:::text_stats()
blogdown:::serve_site()
array(1:24, dim = 2:4)
array(1:24, dim = 2:4) - 1:3
array(1:24, dim = 2:4)
array(1:12, dim = 2:4)
array(1:6, dim = 1:3)
array(1:6, dim = 1:3) - 1
array(1:6, dim = 1:3) - 1:3
library(fudukue)
apply(array(1:6, dim = 1:3), MARGIN = 2:3, sum)
array(1:6, dim = 1:3) %>% apply(MARGIN = 2:3, sum)
array(1:6, dim = 1:3) %>%
apply(MARGIN = 2:3, sum)
array(1:6, dim = 1:3)
array(1:6, dim = 1:3) %>%
apply(MARGIN = 3, sum)
array(1:6, dim = 1:3) %>%
apply(MARGIN = 3, `-`, 1:3)
x <- data.frame(テスト = 1:5, 試行 = 2:6)
x %>%
select(テスt)
x %>%
select(テスト)
x %>%
select(テスト, 試行)
dplyr::select(x, テスト, 試行)
package_version("dplyr")
package_version("package:dplyr")
package_version("package::dplyr")
package_version(x = "dplyr")
packageVersion("dplyr")
x <- data.frame(テスト = 1:5, 試行 = 2:6)
dplyr::select(x, テスト, 試行)
packageVersion("dplyr")
x <- data.frame(テスト = 1:5, 試行 = 2:6)
dplyr::select(x, テスト, 試行)
packageVersion("dplyr")
data.frame(テスト = 1:5, 試行 = 2:6) %>%
dplyr::select(x, テスト, 試行)
data.frame(テスト = 1:5, 試行 = 2:6) %>%
dplyr::select(テスト, 試行)
packageVersion("dplyr")
data.frame(テスト = 1:5, 試行 = 2:6) %>%
dplyr::select(テスト, 試行)
packageVersion("dplyr")
data.frame(テスト = 1:5, 鬼 = 2:6) %>%
dplyr::select(テスト, 鬼)
data.frame(テスト = 1:5, 試行 = 2:6) %>% write_csv("test.csv")
read_csv("test.csv") %>%
dplyr::select(テスト, 試行)
read.csv("test.csv") %>%
dplyr::select(テスト, 試行)
read_csv("test.csv") %>%
dplyr::select(テスト, 試行)
data.frame(テスト = 1:5, 試行 = 2:6, `ほげ`) %>% write_csv("test.csv")
data.frame(テスト = 1:5, 試行 = 2:6, `ほげ` = 1) %>% write_csv("test.csv")
read_csv("test.csv") %>%
dplyr::select(テスト, 試行, ほげ)
read.csv("test.csv") %>%
dplyr::select(テスト, 試行, ほげ)
data.frame(テスト = 1:5, 試行 = 2:6, `ほげ` = 1) %>% write_csv("テスト.csv")
read_csv("test.csv") %>%
dplyr::select(テスト, 試行, ほげ)
data.frame(テスト = 1:5, 試行 = 2:6, `ほげ` = 1) %>% write_csv("テスト/test.csv")
read_csv("test.csv") %>%
dplyr::select(テスト, 試行, ほげ)
read.csv("test.csv") %>%
dplyr::select(テスト, 試行, ほげ)
read_csv("テスト/test.csv") %>%
dplyr::select(テスト, 試行, ほげ)
read.csv("テスト/test.csv") %>%
dplyr::select(テスト, 試行, ほげ)
data.frame(テスト = 1:5, 試行 = 2:6, `ほげ` = 1) %>% write_csv("テスト/鬼.csv")
read_csv("テスト/鬼.csv") %>%
dplyr::select(テスト, 試行, ほげ)
read.csv("テスト/鬼.csv") %>%
dplyr::select(テスト, 試行, ほげ)
blogdown:::serve_site()
blogdown:::serve_site()
A <- data.frame(x = c(8, 1, 4, 4, 3),
y = c(11, 23, 31, 51, 52),
a_index = 1:5)
B <- data.frame(x = c(74, 20, 48, 68, 85, 78, 51, 24, 75, 59, 99, 32, 56, 71, 63),
y = c(57, 54, 25, 38, 24, 17, 50, 40, 20, 9, 23, 22, 56, 8, 53),
b_index = 1:15)
full_join(A, B)
library(fudukue)
full_join(A, B)
join(A, B)
dplyr::left_join(A, B)
B <- data.frame(x = c(74, 20, 48, 68, 85, 78, 51, 24, 75, 59, 99, 32, 56, 71, 63),
y = c(57, 54, 25, 38, 24, 17, 50, 40, 20, 9, 23, 22, 56, 8, 53),
b_index = 1:15)
B
dplyr::left_join(A, B, by = NULL)
dplyr::left_join(A, B)
dplyr::semi_join(A, B)
dplyr::full_join(A, B)
dplyr::full_join(A, B) %>% View
dplyr::full_join(A, B, by = "")
dplyr::full_join(A, B, by = NA)
dplyr::full_join(A, B, copy = T, by = NA)
dplyr::full_join(A, B, copy = T, by = NULL)
A <- data.frame(x_a = c(8, 1, 4, 4, 3),
y_a = c(11, 23, 31, 51, 52),
index_a = 1:5)
B <- data.frame(x_b = c(74, 20, 48, 68, 85, 78, 51, 24, 75, 59, 99, 32, 56, 71, 63),
y_b = c(57, 54, 25, 38, 24, 17, 50, 40, 20, 9, 23, 22, 56, 8, 53),
index_b = 1:15)
dplyr::full_join(A, B, copy = T, by = NULL)
dplyr::full_join(A, B, copy = T)
union(A, B, copy = T)
union(A, B)
xa <- c(8, 1, 4, 4, 3)
ya <- c(11, 23, 31, 51, 52)
xb = c(74, 20, 48, 68, 85, 78, 51, 24, 75, 59, 99, 32, 56, 71, 63)
yb = c(57, 54, 25, 38, 24, 17, 50, 40, 20, 9, 23, 22, 56, 8, 53)
tidyr::crossing(A, B)
tidyr::crossing(A, B) %>% View
tidyr::crossing(A, B) %>%
dplyr::mutate(distance = sqrt((x_a - x_b)^2 + (y_a - y_b)^2))
tidyr::crossing(A, B) %>%
dplyr::mutate(distance = sqrt((x_a - x_b)^2 + (y_a - y_b)^2)) %>%
dplyr::group_by(index_a) %>%
dplyr::arrange(distance) %>%
dplyr::slice(2)
A <- data.frame(x = c(8, 1, 4, 4, 3),
y = c(11, 23, 31, 51, 52))
B <- data.frame(x = c(74, 20, 48, 68, 85, 78, 51, 24, 75, 59, 99, 32, 56, 71, 63),
y = c(57, 54, 25, 38, 24, 17, 50, 40, 20, 9, 23, 22, 56, 8, 53))
tidyr::crossing(A, B)
A <- data.frame(x = c(8, 1, 4, 4, 3),
y = c(11, 23, 31, 51, 52))
B <- data.frame(x = c(74, 20, 48, 68, 85, 78, 51, 24, 75, 59, 99, 32, 56, 71, 63),
y = c(57, 54, 25, 38, 24, 17, 50, 40, 20, 9, 23, 22, 56, 8, 53))
tidyr::crossing(A, B) %>%
dplyr::mutate(distance = sqrt((x_a - x_b)^2 + (y_a - y_b)^2)) %>%
dplyr::group_by(index_a) %>%
dplyr::arrange(distance) %>%
dplyr::slice(2)
A %>%
dplyr::mutate(index = 1:5) %>%
tidyr::crossing(., B) %>%
dplyr::mutate(distance = sqrt((x - x1)^2 + (y - y1)^2))
A %>%
dplyr::mutate(index = 1:5) %>%
tidyr::crossing(., B) %>%
dplyr::mutate(distance = sqrt((x - x1)^2 + (y - y1)^2)) %>%
dplyr::group_by(index) %>%
dplyr::arrange(distance) %>%
dplyr::slice(2)
A %>%
dplyr::mutate(point = 1:5) %>%
tidyr::crossing(., B) %>%
dplyr::mutate(distance = sqrt((x - x1)^2 + (y - y1)^2)) %>%
dplyr::group_by(point) %>%
dplyr::arrange(distance) %>%
dplyr::slice(2)
A %>%
dplyr::mutate(point_id = 1:5) %>%
tidyr::crossing(., B) %>%
dplyr::mutate(distance = sqrt((x - x1)^2 + (y - y1)^2)) %>%
dplyr::group_by(point_id) %>%
dplyr::arrange(distance) %>%
dplyr::slice(2)
A %>%
dplyr::mutate(point_id = 1:5) %>%
tidyr::crossing(., B) %>%
dplyr::mutate(distance = sqrt((x - x1)^2 + (y - y1)^2)) %>%
dplyr::group_by(point_id) %>%
dplyr::arrange(distance) %>%
dplyr::slice(2)
A %>%
dplyr::mutate(point_id = 1:5) %>%
tidyr::crossing(., B) %>%
dplyr::mutate(distance = sqrt((x - x1)^2 + (y - y1)^2))
A %>%
dplyr::mutate(point_id = 1:5) %>%
tidyr::crossing(., B) %>%
dplyr::mutate(distance = sqrt((x - x1)^2 + (y - y1)^2)) %>%
dplyr::group_by(point_id)
A %>%
dplyr::mutate(point_id = 1:5) %>%
tidyr::crossing(., B) %>%
dplyr::mutate(distance = sqrt((x - x1)^2 + (y - y1)^2)) %>%
dplyr::group_by(point_id) %>%
dplyr::arrange(distance) %>%
dplyr::slice(2)
